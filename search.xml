<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CORS跨域请求[简单请求与复杂请求]</title>
    <url>/2023/09/16/CORS%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%5B%E7%AE%80%E5%8D%95%E8%AF%B7%E6%B1%82%E4%B8%8E%E5%A4%8D%E6%9D%82%E8%AF%B7%E6%B1%82%5D/</url>
    <content><![CDATA[<p>跨域资源共享标准新增了一组 HTTP 首部字段，允许服务器声明哪些源站通过浏览器有权限访问哪些资源。另外，规范要求，对那些可能对服务器数据产生副作用的 HTTP 请求方法（特别是GET以外的 HTTP 请求，或者搭配某些 MIME 类型的POST请求），浏览器必须首先使用 OPTIONS方法发起一个预检请求（preflight request），从而获知服务端是否允许该跨域请求。服务器确认允许之后，才发起实际的 HTTP 请求。在预检请求的返回中，服务器端也可以通知客户端，是否需要携带身份凭证（包括 Cookies 和 HTTP 认证相关数据）。<br>众所周知，在以前，跨域可以采用代理、JSONP等方式，而在现代浏览器面前，这些终将成被摒弃，因为有了CORS。<br>CORS可以分成两种：<br>简单请求<br>get post head<br>复杂请求<br>● 用到了 PUT、DELETE 等请求方法<br>● Content-Type的值是上述三种以外的<br>值	描述<br>text&#x2F;plain 	纯文本格式<br>multipart&#x2F;form-data	需要在表单中进行文件上传时，就需要使用该格式<br>● application&#x2F;x-www-form-urlencoded ： <form encType=””>	中默认的encType，form表单数据被编码为key&#x2F;value格式发送到服务器（表单默认的提交数据的格式）<br>● 用到了自定义 header<br>在发送真正的请求前, 会先发送一个方法为OPTIONS的预请求(preflight request), 用于试探服务端是否能接受真正的请求，如果options获得的回应是拒绝性质的，比如404\403\500等http状态，就会停止post、put等请求的发出。<br>Access-Control-Allow-Origin:* &#x2F;&#x2F; 如果只是针对某一个请求源进行设置的话，可以设置为具体的值 Access-Control-Allow-Origin: &#x2F;&#x2F; 例如 ‘<a href="http://www.***.com/">http://www.***.com</a>‘</p>
]]></content>
      <categories>
        <category>面试题</category>
        <category>网络</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo博客出现Cannot GET/xxx错误</title>
    <url>/2023/09/16/Hexo%E5%8D%9A%E5%AE%A2%E5%87%BA%E7%8E%B0Cannot-GET-xxx%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<p>在Hexo博客中，出现Cannot GET&#x2F;xxx错误便意味着xxx文件未被找到。Cannot GET&#x2F;xxx错误本质是hexo server返回的一个404错误。</p>
<p>因此，排查方式如下：</p>
<ol>
<li><p>判断public目录下xxx文件是否存在。<br> （我的错误是 Cannot GET &#x2F;，因此在public目录下寻找index.html是否存在。）</p>
</li>
<li><p>如果说index.html不存在，那么执行hexo c，hexo g重新生成一次，回到步骤1。</p>
</li>
<li><p>步骤2执行完后index.html仍不存在，执行npm audit fix，查看是否少了什么组件，通过npm install hexo-xxx-xxx 安装即可。<br> （我的hexo缺少了hexo-generator-index组件，因此执行npm install hexo-generator-index即可）</p>
</li>
<li><p>步骤3完成之后，执行hexo c，hexo g重新生成静态文件。</p>
</li>
<li><p>仍然有问题，请再参考此文：<a href="https://www.cnblogs.com/Sroot/p/6305938.html">https://www.cnblogs.com/Sroot/p/6305938.html</a></p>
</li>
<li><p>如果依旧解决不了你的问题，请私信我。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>git合并分支的方法</title>
    <url>/2023/09/16/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .	//暂存所有修改</span><br><span class="line">git add  aa.txt //暂存某个文件</span><br><span class="line">git status //查看文件状态是否在暂存区</span><br><span class="line">git reset HEAD .gitignore //撤回暂存区</span><br><span class="line">git commit：// 提交命令</span><br><span class="line">git push //提交到远程仓库</span><br><span class="line">git <span class="built_in">rm</span> &lt;file&gt; //删除未暂存的文件</span><br><span class="line">git <span class="built_in">rm</span> -f &lt;file&gt; 删除已暂存的文件</span><br><span class="line">git <span class="built_in">rm</span> --cached aa.txt 删除已暂存文件，还保留在工作区</span><br><span class="line">git branch 	查看分支</span><br><span class="line">git checkout 分支 切换分支</span><br><span class="line">git checkout -b 创建并切换到目的分支</span><br><span class="line">git branch -d branchname 删除分支</span><br><span class="line">git merge branchname 合并分支</span><br><span class="line">git push --set-upstream origin test2 把本地分支推送到远程仓库</span><br><span class="line">git tag v1.0 打标签</span><br><span class="line">git tag 查看标签，版本</span><br></pre></td></tr></table></figure>
<h2 id="git撤回远程仓库的推送"><a href="#git撤回远程仓库的推送" class="headerlink" title="git撤回远程仓库的推送"></a>git撤回远程仓库的推送</h2><ol>
<li>撤回远程仓库的push <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --soft 3bbf8cfa5f545cf74134a16323df35933a9e74df</span><br></pre></td></tr></table></figure>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --soft 3bbf8cfa5f545cf74134a16323df35933a9e74df</span><br></pre></td></tr></table></figure></li>
<li>远程仓库恢复之前的版本 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin test1 --force</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="git合并分支的方法"><a href="#git合并分支的方法" class="headerlink" title="git合并分支的方法"></a>git合并分支的方法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin test1 --force</span><br></pre></td></tr></table></figure>
<h3 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h3><p>将其他分支的某个提交合并到当前分支<br>git cherry-pick d4af0cb1a2a9136c1219bfa4e83187fcbd9bd1ab<br>连续合并<br>&#x2F;&#x2F; commitidA的提交时间必须要早于commitidB<br>&#x2F;&#x2F; 这种提交不会包含commitid-A本身</p>
<p>git cherry-pick commitidA..commitidB<br>git push</p>
<p>&#x2F;&#x2F;如果想包含commtidA也是可以的<br>git cherry-pick commitidA..commitid B<br>git push</p>
<p>git rebase<br>$ git checkout dev<br>$ git rebase master<br>$ git checkout master<br>$ git merge dev<br>git撤回commit<br>git reset –soft HEAD^</p>
]]></content>
      <categories>
        <category>面试题</category>
        <category>git</category>
      </categories>
  </entry>
  <entry>
    <title>windows11问题</title>
    <url>/2023/09/14/windows11%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="win11-保存文件为什么显示：你没有权限在此-位置保存文件，请与管理员联系以获取相关权限"><a href="#win11-保存文件为什么显示：你没有权限在此-位置保存文件，请与管理员联系以获取相关权限" class="headerlink" title="win11 保存文件为什么显示：你没有权限在此 位置保存文件，请与管理员联系以获取相关权限"></a>win11 保存文件为什么显示：你没有权限在此 位置保存文件，请与管理员联系以获取相关权限</h2><p><a href="https://www.cnblogs.com/mxnote/articles/17143123.html">https://www.cnblogs.com/mxnote/articles/17143123.html</a></p>
<h2 id="解决-win10-找不到文件-gpedit-msc"><a href="#解决-win10-找不到文件-gpedit-msc" class="headerlink" title="解决 win10 找不到文件 gpedit.msc"></a>解决 win10 找不到文件 gpedit.msc</h2><p><strong>gpedit.msc 是常用到的一种命令，在运行里输入</strong>gpedit.msc 命令以后<strong>可以打开本地策略组编辑器，但是有的电脑输入该命令以后确提示找不到如下图，如个别的</strong>win10 家庭版</p>
<p><strong>解决方法：</strong></p>
<p>**1.**打开记事本，输入以下代码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">pushd &quot;%~dp0&quot;</span><br><span class="line"></span><br><span class="line">dir /b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum &gt;List.txt</span><br><span class="line"></span><br><span class="line">dir /b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*.mum &gt;&gt;List.txt</span><br><span class="line"></span><br><span class="line">for /f %%i in (&#x27;findstr /i . List.txt 2^&gt;nul&#x27;) do dism /online /norestart /add-package:&quot;C:\Windows\servicing\Packages\%%i&quot;</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure>

<p>右键另存为.bat 文件，然后右键打开运行。</p>
]]></content>
      <categories>
        <category>电脑</category>
      </categories>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
</search>
